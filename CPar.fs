// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码
let first  (a, _, _) = a
let second (_, b, _) = b
let third  (_, _, c) = c

# 25 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | QUE
  | COLON
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | BOOL
  | SELFINC
  | SELFDEC
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | CHAR
  | FLOAT
  | STRING
  | HEX
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | IN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | DOWHILE
  | DO
  | UNTIL
  | DOUNTIL
  | BREAK
  | CONTINUE
  | SWITCH
  | CASE
  | DEFAULT
  | CSTCHAR of (char)
  | CSTFLOAT of (float32)
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTBOOL of (bool)
  | CSTINT of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_QUE
    | TOKEN_COLON
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_BOOL
    | TOKEN_SELFINC
    | TOKEN_SELFDEC
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_CHAR
    | TOKEN_FLOAT
    | TOKEN_STRING
    | TOKEN_HEX
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_IN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_DOWHILE
    | TOKEN_DO
    | TOKEN_UNTIL
    | TOKEN_DOUNTIL
    | TOKEN_BREAK
    | TOKEN_CONTINUE
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_DEFAULT
    | TOKEN_CSTCHAR
    | TOKEN_CSTFLOAT
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTBOOL
    | TOKEN_CSTINT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_StmtCase
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_ConstBool
    | NONTERM_ConstFloat
    | NONTERM_ConstString
    | NONTERM_ConstChar
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | QUE  -> 11 
  | COLON  -> 12 
  | NOT  -> 13 
  | SEQOR  -> 14 
  | SEQAND  -> 15 
  | EQ  -> 16 
  | NE  -> 17 
  | GT  -> 18 
  | LT  -> 19 
  | GE  -> 20 
  | LE  -> 21 
  | BOOL  -> 22 
  | SELFINC  -> 23 
  | SELFDEC  -> 24 
  | PLUS  -> 25 
  | MINUS  -> 26 
  | TIMES  -> 27 
  | DIV  -> 28 
  | MOD  -> 29 
  | CHAR  -> 30 
  | FLOAT  -> 31 
  | STRING  -> 32 
  | HEX  -> 33 
  | ELSE  -> 34 
  | IF  -> 35 
  | INT  -> 36 
  | NULL  -> 37 
  | PRINT  -> 38 
  | PRINTLN  -> 39 
  | IN  -> 40 
  | RETURN  -> 41 
  | VOID  -> 42 
  | WHILE  -> 43 
  | FOR  -> 44 
  | DOWHILE  -> 45 
  | DO  -> 46 
  | UNTIL  -> 47 
  | DOUNTIL  -> 48 
  | BREAK  -> 49 
  | CONTINUE  -> 50 
  | SWITCH  -> 51 
  | CASE  -> 52 
  | DEFAULT  -> 53 
  | CSTCHAR _ -> 54 
  | CSTFLOAT _ -> 55 
  | CSTSTRING _ -> 56 
  | NAME _ -> 57 
  | CSTBOOL _ -> 58 
  | CSTINT _ -> 59 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_QUE 
  | 12 -> TOKEN_COLON 
  | 13 -> TOKEN_NOT 
  | 14 -> TOKEN_SEQOR 
  | 15 -> TOKEN_SEQAND 
  | 16 -> TOKEN_EQ 
  | 17 -> TOKEN_NE 
  | 18 -> TOKEN_GT 
  | 19 -> TOKEN_LT 
  | 20 -> TOKEN_GE 
  | 21 -> TOKEN_LE 
  | 22 -> TOKEN_BOOL 
  | 23 -> TOKEN_SELFINC 
  | 24 -> TOKEN_SELFDEC 
  | 25 -> TOKEN_PLUS 
  | 26 -> TOKEN_MINUS 
  | 27 -> TOKEN_TIMES 
  | 28 -> TOKEN_DIV 
  | 29 -> TOKEN_MOD 
  | 30 -> TOKEN_CHAR 
  | 31 -> TOKEN_FLOAT 
  | 32 -> TOKEN_STRING 
  | 33 -> TOKEN_HEX 
  | 34 -> TOKEN_ELSE 
  | 35 -> TOKEN_IF 
  | 36 -> TOKEN_INT 
  | 37 -> TOKEN_NULL 
  | 38 -> TOKEN_PRINT 
  | 39 -> TOKEN_PRINTLN 
  | 40 -> TOKEN_IN 
  | 41 -> TOKEN_RETURN 
  | 42 -> TOKEN_VOID 
  | 43 -> TOKEN_WHILE 
  | 44 -> TOKEN_FOR 
  | 45 -> TOKEN_DOWHILE 
  | 46 -> TOKEN_DO 
  | 47 -> TOKEN_UNTIL 
  | 48 -> TOKEN_DOUNTIL 
  | 49 -> TOKEN_BREAK 
  | 50 -> TOKEN_CONTINUE 
  | 51 -> TOKEN_SWITCH 
  | 52 -> TOKEN_CASE 
  | 53 -> TOKEN_DEFAULT 
  | 54 -> TOKEN_CSTCHAR 
  | 55 -> TOKEN_CSTFLOAT 
  | 56 -> TOKEN_CSTSTRING 
  | 57 -> TOKEN_NAME 
  | 58 -> TOKEN_CSTBOOL 
  | 59 -> TOKEN_CSTINT 
  | 62 -> TOKEN_end_of_input
  | 60 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtM 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_StmtCase 
    | 41 -> NONTERM_StmtCase 
    | 42 -> NONTERM_StmtCase 
    | 43 -> NONTERM_Expr 
    | 44 -> NONTERM_Expr 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_AtExprNotAccess 
    | 72 -> NONTERM_AtExprNotAccess 
    | 73 -> NONTERM_AtExprNotAccess 
    | 74 -> NONTERM_AtExprNotAccess 
    | 75 -> NONTERM_AtExprNotAccess 
    | 76 -> NONTERM_AtExprNotAccess 
    | 77 -> NONTERM_AtExprNotAccess 
    | 78 -> NONTERM_Access 
    | 79 -> NONTERM_Access 
    | 80 -> NONTERM_Access 
    | 81 -> NONTERM_Access 
    | 82 -> NONTERM_Access 
    | 83 -> NONTERM_Exprs 
    | 84 -> NONTERM_Exprs 
    | 85 -> NONTERM_Exprs1 
    | 86 -> NONTERM_Exprs1 
    | 87 -> NONTERM_Const 
    | 88 -> NONTERM_Const 
    | 89 -> NONTERM_Const 
    | 90 -> NONTERM_ConstBool 
    | 91 -> NONTERM_ConstFloat 
    | 92 -> NONTERM_ConstFloat 
    | 93 -> NONTERM_ConstString 
    | 94 -> NONTERM_ConstChar 
    | 95 -> NONTERM_Type 
    | 96 -> NONTERM_Type 
    | 97 -> NONTERM_Type 
    | 98 -> NONTERM_Type 
    | 99 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 62 
let _fsyacc_tagOfErrorTerminal = 60

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | QUE  -> "QUE" 
  | COLON  -> "COLON" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | BOOL  -> "BOOL" 
  | SELFINC  -> "SELFINC" 
  | SELFDEC  -> "SELFDEC" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | CHAR  -> "CHAR" 
  | FLOAT  -> "FLOAT" 
  | STRING  -> "STRING" 
  | HEX  -> "HEX" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | IN  -> "IN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | DOWHILE  -> "DOWHILE" 
  | DO  -> "DO" 
  | UNTIL  -> "UNTIL" 
  | DOUNTIL  -> "DOUNTIL" 
  | BREAK  -> "BREAK" 
  | CONTINUE  -> "CONTINUE" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | DEFAULT  -> "DEFAULT" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTBOOL _ -> "CSTBOOL" 
  | CSTINT _ -> "CSTINT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | QUE  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | BOOL  -> (null : System.Object) 
  | SELFINC  -> (null : System.Object) 
  | SELFDEC  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | STRING  -> (null : System.Object) 
  | HEX  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | DOWHILE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | UNTIL  -> (null : System.Object) 
  | DOUNTIL  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | CONTINUE  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 8us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 16us; 65535us; 27us; 28us; 31us; 32us; 37us; 54us; 40us; 54us; 43us; 54us; 61us; 54us; 62us; 54us; 64us; 54us; 65us; 54us; 73us; 54us; 74us; 54us; 83us; 54us; 85us; 54us; 107us; 54us; 121us; 54us; 124us; 54us; 3us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 4us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 62us; 117us; 14us; 65535us; 37us; 45us; 40us; 45us; 43us; 45us; 61us; 63us; 62us; 46us; 64us; 66us; 65us; 66us; 73us; 75us; 74us; 75us; 83us; 84us; 85us; 86us; 107us; 108us; 121us; 122us; 124us; 125us; 6us; 65535us; 37us; 47us; 40us; 47us; 43us; 47us; 62us; 47us; 65us; 116us; 74us; 118us; 2us; 65535us; 113us; 114us; 122us; 126us; 51us; 65535us; 37us; 48us; 40us; 48us; 43us; 48us; 50us; 52us; 57us; 60us; 58us; 59us; 61us; 48us; 62us; 48us; 64us; 48us; 65us; 48us; 69us; 72us; 70us; 71us; 73us; 48us; 74us; 48us; 77us; 78us; 79us; 80us; 81us; 82us; 83us; 48us; 85us; 48us; 88us; 89us; 93us; 94us; 103us; 104us; 105us; 106us; 107us; 48us; 110us; 111us; 121us; 48us; 124us; 48us; 138us; 139us; 141us; 175us; 144us; 145us; 147us; 148us; 150us; 151us; 176us; 158us; 177us; 159us; 178us; 160us; 179us; 161us; 180us; 162us; 181us; 163us; 182us; 164us; 183us; 165us; 184us; 166us; 185us; 167us; 186us; 168us; 187us; 169us; 188us; 170us; 189us; 171us; 190us; 173us; 193us; 172us; 194us; 172us; 208us; 174us; 211us; 175us; 51us; 65535us; 37us; 129us; 40us; 129us; 43us; 129us; 50us; 129us; 57us; 129us; 58us; 129us; 61us; 129us; 62us; 129us; 64us; 129us; 65us; 129us; 69us; 129us; 70us; 129us; 73us; 129us; 74us; 129us; 77us; 129us; 79us; 129us; 81us; 129us; 83us; 129us; 85us; 129us; 88us; 129us; 93us; 129us; 103us; 129us; 105us; 129us; 107us; 129us; 110us; 129us; 121us; 129us; 124us; 129us; 138us; 129us; 141us; 129us; 144us; 129us; 147us; 129us; 150us; 129us; 176us; 129us; 177us; 129us; 178us; 129us; 179us; 129us; 180us; 129us; 181us; 129us; 182us; 129us; 183us; 129us; 184us; 129us; 185us; 129us; 186us; 129us; 187us; 129us; 188us; 129us; 189us; 129us; 190us; 129us; 193us; 130us; 194us; 130us; 208us; 129us; 211us; 129us; 53us; 65535us; 37us; 131us; 40us; 131us; 43us; 131us; 50us; 131us; 57us; 131us; 58us; 131us; 61us; 131us; 62us; 131us; 64us; 131us; 65us; 131us; 69us; 131us; 70us; 131us; 73us; 131us; 74us; 131us; 77us; 131us; 79us; 131us; 81us; 131us; 83us; 131us; 85us; 131us; 88us; 131us; 93us; 131us; 103us; 131us; 105us; 131us; 107us; 131us; 110us; 131us; 119us; 120us; 121us; 131us; 124us; 131us; 138us; 131us; 141us; 131us; 144us; 131us; 147us; 131us; 150us; 131us; 176us; 131us; 177us; 131us; 178us; 131us; 179us; 131us; 180us; 131us; 181us; 131us; 182us; 131us; 183us; 131us; 184us; 131us; 185us; 131us; 186us; 131us; 187us; 131us; 188us; 131us; 189us; 131us; 190us; 131us; 193us; 131us; 194us; 131us; 205us; 207us; 208us; 131us; 211us; 131us; 57us; 65535us; 37us; 128us; 40us; 128us; 43us; 128us; 50us; 128us; 57us; 128us; 58us; 128us; 61us; 128us; 62us; 128us; 64us; 128us; 65us; 128us; 69us; 128us; 70us; 128us; 73us; 128us; 74us; 128us; 76us; 101us; 77us; 127us; 79us; 128us; 81us; 128us; 83us; 128us; 85us; 128us; 88us; 128us; 93us; 128us; 103us; 128us; 105us; 128us; 107us; 128us; 110us; 128us; 121us; 128us; 124us; 128us; 138us; 128us; 141us; 128us; 144us; 128us; 147us; 128us; 150us; 128us; 152us; 153us; 154us; 155us; 176us; 128us; 177us; 128us; 178us; 128us; 179us; 128us; 180us; 128us; 181us; 128us; 182us; 128us; 183us; 128us; 184us; 128us; 185us; 128us; 186us; 128us; 187us; 128us; 188us; 128us; 189us; 128us; 190us; 128us; 193us; 128us; 194us; 127us; 199us; 200us; 202us; 203us; 205us; 206us; 208us; 128us; 211us; 128us; 1us; 65535us; 141us; 142us; 2us; 65535us; 141us; 210us; 211us; 212us; 53us; 65535us; 37us; 191us; 40us; 191us; 43us; 191us; 50us; 191us; 57us; 191us; 58us; 191us; 61us; 191us; 62us; 191us; 64us; 191us; 65us; 191us; 69us; 191us; 70us; 191us; 73us; 191us; 74us; 191us; 77us; 191us; 79us; 191us; 81us; 191us; 83us; 191us; 85us; 191us; 88us; 191us; 93us; 191us; 103us; 191us; 105us; 191us; 107us; 191us; 110us; 191us; 119us; 191us; 121us; 191us; 124us; 191us; 138us; 191us; 141us; 191us; 144us; 191us; 147us; 191us; 150us; 191us; 176us; 191us; 177us; 191us; 178us; 191us; 179us; 191us; 180us; 191us; 181us; 191us; 182us; 191us; 183us; 191us; 184us; 191us; 185us; 191us; 186us; 191us; 187us; 191us; 188us; 191us; 189us; 191us; 190us; 191us; 193us; 191us; 194us; 191us; 205us; 191us; 208us; 191us; 211us; 191us; 53us; 65535us; 37us; 196us; 40us; 196us; 43us; 196us; 50us; 196us; 57us; 196us; 58us; 196us; 61us; 196us; 62us; 196us; 64us; 196us; 65us; 196us; 69us; 196us; 70us; 196us; 73us; 196us; 74us; 196us; 77us; 196us; 79us; 196us; 81us; 196us; 83us; 196us; 85us; 196us; 88us; 196us; 93us; 196us; 103us; 196us; 105us; 196us; 107us; 196us; 110us; 196us; 119us; 196us; 121us; 196us; 124us; 196us; 138us; 196us; 141us; 196us; 144us; 196us; 147us; 196us; 150us; 196us; 176us; 196us; 177us; 196us; 178us; 196us; 179us; 196us; 180us; 196us; 181us; 196us; 182us; 196us; 183us; 196us; 184us; 196us; 185us; 196us; 186us; 196us; 187us; 196us; 188us; 196us; 189us; 196us; 190us; 196us; 193us; 196us; 194us; 196us; 205us; 196us; 208us; 196us; 211us; 196us; 53us; 65535us; 37us; 197us; 40us; 197us; 43us; 197us; 50us; 197us; 57us; 197us; 58us; 197us; 61us; 197us; 62us; 197us; 64us; 197us; 65us; 197us; 69us; 197us; 70us; 197us; 73us; 197us; 74us; 197us; 77us; 197us; 79us; 197us; 81us; 197us; 83us; 197us; 85us; 197us; 88us; 197us; 93us; 197us; 103us; 197us; 105us; 197us; 107us; 197us; 110us; 197us; 119us; 197us; 121us; 197us; 124us; 197us; 138us; 197us; 141us; 197us; 144us; 197us; 147us; 197us; 150us; 197us; 176us; 197us; 177us; 197us; 178us; 197us; 179us; 197us; 180us; 197us; 181us; 197us; 182us; 197us; 183us; 197us; 184us; 197us; 185us; 197us; 186us; 197us; 187us; 197us; 188us; 197us; 189us; 197us; 190us; 197us; 193us; 197us; 194us; 197us; 205us; 197us; 208us; 197us; 211us; 197us; 53us; 65535us; 37us; 192us; 40us; 192us; 43us; 192us; 50us; 192us; 57us; 192us; 58us; 192us; 61us; 192us; 62us; 192us; 64us; 192us; 65us; 192us; 69us; 192us; 70us; 192us; 73us; 192us; 74us; 192us; 77us; 192us; 79us; 192us; 81us; 192us; 83us; 192us; 85us; 192us; 88us; 192us; 93us; 192us; 103us; 192us; 105us; 192us; 107us; 192us; 110us; 192us; 119us; 192us; 121us; 192us; 124us; 192us; 138us; 192us; 141us; 192us; 144us; 192us; 147us; 192us; 150us; 192us; 176us; 192us; 177us; 192us; 178us; 192us; 179us; 192us; 180us; 192us; 181us; 192us; 182us; 192us; 183us; 192us; 184us; 192us; 185us; 192us; 186us; 192us; 187us; 192us; 188us; 192us; 189us; 192us; 190us; 192us; 193us; 192us; 194us; 192us; 205us; 192us; 208us; 192us; 211us; 192us; 53us; 65535us; 37us; 198us; 40us; 198us; 43us; 198us; 50us; 198us; 57us; 198us; 58us; 198us; 61us; 198us; 62us; 198us; 64us; 198us; 65us; 198us; 69us; 198us; 70us; 198us; 73us; 198us; 74us; 198us; 77us; 198us; 79us; 198us; 81us; 198us; 83us; 198us; 85us; 198us; 88us; 198us; 93us; 198us; 103us; 198us; 105us; 198us; 107us; 198us; 110us; 198us; 119us; 198us; 121us; 198us; 124us; 198us; 138us; 198us; 141us; 198us; 144us; 198us; 147us; 198us; 150us; 198us; 176us; 198us; 177us; 198us; 178us; 198us; 179us; 198us; 180us; 198us; 181us; 198us; 182us; 198us; 183us; 198us; 184us; 198us; 185us; 198us; 186us; 198us; 187us; 198us; 188us; 198us; 189us; 198us; 190us; 198us; 193us; 198us; 194us; 198us; 205us; 198us; 208us; 198us; 211us; 198us; 8us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 18us; 23us; 26us; 29us; 33us; 50us; 54us; 59us; 74us; 81us; 84us; 136us; 188us; 242us; 300us; 302us; 305us; 359us; 413us; 467us; 521us; 575us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 3us; 22us; 28us; 37us; 1us; 23us; 15us; 24us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 15us; 26us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 1us; 26us; 1us; 27us; 1us; 28us; 3us; 28us; 37us; 38us; 1us; 28us; 3us; 28us; 37us; 38us; 17us; 28us; 37us; 38us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 15us; 28us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 1us; 28us; 3us; 28us; 37us; 38us; 1us; 28us; 1us; 28us; 2us; 28us; 37us; 1us; 28us; 1us; 29us; 2us; 29us; 39us; 1us; 29us; 2us; 29us; 39us; 16us; 29us; 39us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 15us; 29us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 1us; 29us; 2us; 29us; 39us; 1us; 29us; 2us; 30us; 35us; 2us; 30us; 79us; 15us; 30us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 1us; 30us; 15us; 30us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 1us; 30us; 15us; 30us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 1us; 30us; 1us; 30us; 2us; 31us; 32us; 2us; 31us; 32us; 1us; 31us; 1us; 31us; 15us; 31us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 32us; 15us; 32us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 1us; 32us; 1us; 32us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 34us; 2us; 35us; 82us; 1us; 35us; 1us; 35us; 15us; 35us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 1us; 35us; 15us; 35us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 36us; 15us; 36us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 39us; 2us; 40us; 42us; 2us; 40us; 42us; 2us; 40us; 42us; 2us; 40us; 42us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 42us; 6us; 43us; 47us; 55us; 56us; 79us; 82us; 5us; 43us; 47us; 55us; 56us; 82us; 1us; 44us; 2us; 44us; 73us; 1us; 45us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 47us; 15us; 47us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 2us; 48us; 78us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 49us; 15us; 49us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 2us; 50us; 52us; 1us; 50us; 15us; 50us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 1us; 51us; 1us; 52us; 15us; 52us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 1us; 53us; 2us; 53us; 82us; 1us; 54us; 2us; 54us; 82us; 1us; 55us; 1us; 56us; 15us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 15us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 15us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 15us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 15us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 15us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 15us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 15us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 15us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 67us; 68us; 69us; 70us; 15us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 66us; 67us; 68us; 69us; 70us; 15us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 67us; 68us; 69us; 70us; 15us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 68us; 69us; 70us; 15us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 68us; 69us; 70us; 15us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 69us; 70us; 14us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 15us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 70us; 15us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 82us; 16us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 85us; 86us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 2us; 73us; 79us; 1us; 73us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 77us; 2us; 77us; 82us; 1us; 78us; 1us; 79us; 2us; 79us; 82us; 1us; 79us; 2us; 80us; 81us; 2us; 80us; 82us; 1us; 81us; 1us; 82us; 1us; 82us; 1us; 84us; 1us; 86us; 1us; 86us; 1us; 87us; 2us; 88us; 92us; 1us; 88us; 1us; 89us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 96us; 1us; 97us; 1us; 98us; 1us; 99us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 106us; 108us; 124us; 126us; 129us; 131us; 147us; 149us; 151us; 153us; 157us; 159us; 163us; 181us; 197us; 199us; 203us; 205us; 207us; 210us; 212us; 214us; 217us; 219us; 222us; 239us; 255us; 257us; 260us; 262us; 265us; 268us; 284us; 286us; 302us; 304us; 320us; 322us; 324us; 327us; 330us; 332us; 334us; 350us; 352us; 354us; 356us; 358us; 374us; 376us; 378us; 380us; 382us; 384us; 386us; 389us; 391us; 393us; 409us; 411us; 427us; 429us; 431us; 433us; 435us; 451us; 453us; 455us; 457us; 459us; 461us; 463us; 465us; 468us; 471us; 474us; 477us; 479us; 481us; 483us; 485us; 492us; 498us; 500us; 503us; 505us; 507us; 509us; 511us; 513us; 515us; 517us; 519us; 535us; 538us; 540us; 542us; 544us; 546us; 562us; 565us; 567us; 583us; 585us; 587us; 603us; 605us; 608us; 610us; 613us; 615us; 617us; 633us; 649us; 665us; 681us; 697us; 713us; 729us; 745us; 761us; 777us; 793us; 809us; 825us; 841us; 856us; 872us; 888us; 905us; 907us; 909us; 911us; 913us; 915us; 917us; 919us; 921us; 923us; 925us; 927us; 929us; 931us; 933us; 935us; 937us; 939us; 941us; 944us; 946us; 948us; 950us; 952us; 954us; 957us; 959us; 961us; 964us; 966us; 969us; 972us; 974us; 976us; 978us; 980us; 982us; 984us; 986us; 989us; 991us; 993us; 995us; 997us; 999us; 1001us; 1003us; 1005us; 1007us; 1009us; 1011us; |]
let _fsyacc_action_rows = 227
let _fsyacc_actionTableElements = [|6us; 16386us; 22us; 223us; 30us; 224us; 31us; 225us; 32us; 226us; 36us; 222us; 42us; 23us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 6us; 16386us; 22us; 223us; 30us; 224us; 31us; 225us; 32us; 226us; 36us; 222us; 42us; 23us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 1us; 16us; 27us; 14us; 57us; 12us; 3us; 32768us; 1us; 16us; 27us; 14us; 57us; 13us; 1us; 16390us; 5us; 19us; 0us; 16391us; 1us; 16391us; 1us; 29us; 3us; 32768us; 1us; 16us; 27us; 14us; 57us; 12us; 1us; 16392us; 5us; 19us; 3us; 32768us; 1us; 16us; 27us; 14us; 57us; 12us; 2us; 32768us; 2us; 18us; 5us; 19us; 0us; 16393us; 2us; 32768us; 6us; 20us; 59us; 21us; 0us; 16394us; 1us; 32768us; 6us; 22us; 0us; 16395us; 1us; 32768us; 57us; 24us; 1us; 32768us; 1us; 25us; 5us; 16398us; 22us; 223us; 30us; 224us; 31us; 225us; 32us; 226us; 36us; 222us; 1us; 32768us; 2us; 27us; 1us; 32768us; 3us; 37us; 0us; 16396us; 5us; 16398us; 22us; 223us; 30us; 224us; 31us; 225us; 32us; 226us; 36us; 222us; 1us; 32768us; 2us; 31us; 1us; 32768us; 3us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 8us; 35us; 5us; 32768us; 22us; 223us; 30us; 224us; 31us; 225us; 32us; 226us; 36us; 222us; 0us; 16401us; 31us; 16403us; 1us; 194us; 3us; 37us; 10us; 199us; 13us; 144us; 22us; 223us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 30us; 224us; 31us; 225us; 32us; 226us; 33us; 132us; 35us; 56us; 36us; 222us; 37us; 216us; 38us; 146us; 39us; 149us; 41us; 50us; 43us; 68us; 44us; 76us; 46us; 85us; 49us; 97us; 50us; 99us; 51us; 109us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 1us; 32768us; 4us; 39us; 0us; 16402us; 31us; 16403us; 1us; 194us; 3us; 37us; 10us; 199us; 13us; 144us; 22us; 223us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 30us; 224us; 31us; 225us; 32us; 226us; 33us; 132us; 35us; 56us; 36us; 222us; 37us; 216us; 38us; 146us; 39us; 149us; 41us; 50us; 43us; 68us; 44us; 76us; 46us; 85us; 49us; 97us; 50us; 99us; 51us; 109us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 0us; 16404us; 1us; 32768us; 7us; 43us; 31us; 16403us; 1us; 194us; 3us; 37us; 10us; 199us; 13us; 144us; 22us; 223us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 30us; 224us; 31us; 225us; 32us; 226us; 33us; 132us; 35us; 56us; 36us; 222us; 37us; 216us; 38us; 146us; 39us; 149us; 41us; 50us; 43us; 68us; 44us; 76us; 46us; 85us; 49us; 97us; 50us; 99us; 51us; 109us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 0us; 16405us; 0us; 16406us; 1us; 16406us; 34us; 65us; 0us; 16407us; 15us; 32768us; 7us; 49us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 0us; 16408us; 18us; 32768us; 1us; 194us; 7us; 51us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 0us; 16409us; 15us; 32768us; 7us; 53us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 1us; 57us; 1us; 32768us; 1us; 58us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 15us; 32768us; 2us; 62us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 15us; 32768us; 2us; 61us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 26us; 32768us; 1us; 194us; 3us; 37us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 35us; 55us; 37us; 216us; 38us; 146us; 39us; 149us; 41us; 50us; 43us; 67us; 44us; 76us; 46us; 85us; 49us; 97us; 50us; 99us; 51us; 109us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 26us; 32768us; 1us; 194us; 3us; 37us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 35us; 56us; 37us; 216us; 38us; 146us; 39us; 149us; 41us; 50us; 43us; 68us; 44us; 76us; 46us; 85us; 49us; 97us; 50us; 99us; 51us; 109us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 1us; 32768us; 34us; 64us; 26us; 32768us; 1us; 194us; 3us; 37us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 35us; 55us; 37us; 216us; 38us; 146us; 39us; 149us; 41us; 50us; 43us; 67us; 44us; 76us; 46us; 85us; 49us; 97us; 50us; 99us; 51us; 109us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 26us; 32768us; 1us; 194us; 3us; 37us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 35us; 56us; 37us; 216us; 38us; 146us; 39us; 149us; 41us; 50us; 43us; 68us; 44us; 76us; 46us; 85us; 49us; 97us; 50us; 99us; 51us; 109us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 0us; 16412us; 1us; 32768us; 1us; 69us; 1us; 32768us; 1us; 70us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 15us; 32768us; 2us; 74us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 15us; 32768us; 2us; 73us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 26us; 32768us; 1us; 194us; 3us; 37us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 35us; 55us; 37us; 216us; 38us; 146us; 39us; 149us; 41us; 50us; 43us; 67us; 44us; 76us; 46us; 85us; 49us; 97us; 50us; 99us; 51us; 109us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 26us; 32768us; 1us; 194us; 3us; 37us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 35us; 56us; 37us; 216us; 38us; 146us; 39us; 149us; 41us; 50us; 43us; 68us; 44us; 76us; 46us; 85us; 49us; 97us; 50us; 99us; 51us; 109us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 0us; 16413us; 3us; 32768us; 1us; 77us; 27us; 205us; 57us; 201us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 15us; 32768us; 7us; 79us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 15us; 32768us; 7us; 81us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 15us; 32768us; 2us; 83us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 26us; 32768us; 1us; 194us; 3us; 37us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 35us; 55us; 37us; 216us; 38us; 146us; 39us; 149us; 41us; 50us; 43us; 67us; 44us; 76us; 46us; 85us; 49us; 97us; 50us; 99us; 51us; 109us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 0us; 16414us; 26us; 32768us; 1us; 194us; 3us; 37us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 35us; 55us; 37us; 216us; 38us; 146us; 39us; 149us; 41us; 50us; 43us; 67us; 44us; 76us; 46us; 85us; 49us; 97us; 50us; 99us; 51us; 109us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 2us; 32768us; 43us; 87us; 47us; 92us; 1us; 32768us; 1us; 88us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 15us; 32768us; 2us; 90us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 1us; 32768us; 7us; 91us; 0us; 16415us; 1us; 32768us; 1us; 93us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 15us; 32768us; 2us; 95us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 1us; 32768us; 7us; 96us; 0us; 16416us; 1us; 32768us; 7us; 98us; 0us; 16417us; 1us; 32768us; 7us; 100us; 0us; 16418us; 2us; 32768us; 5us; 208us; 40us; 102us; 1us; 32768us; 1us; 103us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 15us; 32768us; 8us; 105us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 15us; 32768us; 2us; 107us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 26us; 32768us; 1us; 194us; 3us; 37us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 35us; 55us; 37us; 216us; 38us; 146us; 39us; 149us; 41us; 50us; 43us; 67us; 44us; 76us; 46us; 85us; 49us; 97us; 50us; 99us; 51us; 109us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 0us; 16419us; 1us; 32768us; 1us; 110us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 15us; 32768us; 2us; 112us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 1us; 32768us; 3us; 113us; 2us; 32768us; 52us; 119us; 53us; 123us; 1us; 32768us; 4us; 115us; 0us; 16420us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 9us; 32768us; 1us; 193us; 10us; 199us; 26us; 214us; 37us; 216us; 54us; 221us; 55us; 218us; 56us; 220us; 58us; 217us; 59us; 213us; 1us; 32768us; 12us; 121us; 26us; 32768us; 1us; 194us; 3us; 37us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 35us; 55us; 37us; 216us; 38us; 146us; 39us; 149us; 41us; 50us; 43us; 67us; 44us; 76us; 46us; 85us; 49us; 97us; 50us; 99us; 51us; 109us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 2us; 16424us; 52us; 119us; 53us; 123us; 1us; 32768us; 12us; 124us; 26us; 32768us; 1us; 194us; 3us; 37us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 35us; 55us; 37us; 216us; 38us; 146us; 39us; 149us; 41us; 50us; 43us; 67us; 44us; 76us; 46us; 85us; 49us; 97us; 50us; 99us; 51us; 109us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 0us; 16425us; 0us; 16426us; 5us; 16427us; 2us; 204us; 5us; 208us; 9us; 138us; 23us; 156us; 24us; 157us; 4us; 16427us; 5us; 208us; 9us; 138us; 23us; 156us; 24us; 157us; 0us; 16428us; 1us; 16428us; 2us; 195us; 0us; 16429us; 1us; 32768us; 1us; 133us; 1us; 32768us; 56us; 134us; 1us; 32768us; 8us; 135us; 1us; 32768us; 59us; 136us; 1us; 32768us; 2us; 137us; 0us; 16430us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 14us; 16431us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 1us; 16462us; 1us; 141us; 17us; 16467us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 1us; 32768us; 2us; 143us; 0us; 16432us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 0us; 16433us; 2us; 32768us; 56us; 147us; 59us; 150us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 14us; 16434us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 0us; 16435us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 14us; 16436us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 3us; 32768us; 1us; 202us; 27us; 205us; 57us; 201us; 1us; 16437us; 5us; 208us; 3us; 32768us; 1us; 202us; 27us; 205us; 57us; 201us; 1us; 16438us; 5us; 208us; 0us; 16439us; 0us; 16440us; 3us; 16441us; 27us; 178us; 28us; 179us; 29us; 180us; 3us; 16442us; 27us; 178us; 28us; 179us; 29us; 180us; 0us; 16443us; 0us; 16444us; 0us; 16445us; 9us; 16446us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 9us; 16447us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 9us; 16448us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 9us; 16449us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 9us; 16450us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 9us; 16451us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 15us; 32768us; 11us; 187us; 12us; 188us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 14us; 16452us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 11us; 16453us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 14us; 32768us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 12us; 16454us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 15us; 32768us; 6us; 209us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 15us; 16469us; 8us; 211us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 0us; 16455us; 0us; 16456us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 0us; 16457us; 0us; 16458us; 0us; 16459us; 0us; 16460us; 3us; 32768us; 1us; 202us; 27us; 205us; 57us; 201us; 1us; 16461us; 5us; 208us; 0us; 16462us; 3us; 32768us; 1us; 202us; 27us; 205us; 57us; 201us; 2us; 32768us; 2us; 204us; 5us; 208us; 0us; 16463us; 11us; 32768us; 1us; 194us; 10us; 199us; 26us; 214us; 27us; 205us; 37us; 216us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 201us; 58us; 217us; 59us; 213us; 1us; 16464us; 5us; 208us; 0us; 16465us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 0us; 16466us; 0us; 16468us; 17us; 32768us; 1us; 194us; 10us; 199us; 13us; 144us; 23us; 152us; 24us; 154us; 26us; 214us; 27us; 205us; 33us; 132us; 37us; 216us; 38us; 146us; 39us; 149us; 54us; 221us; 55us; 218us; 56us; 220us; 57us; 140us; 58us; 217us; 59us; 213us; 0us; 16470us; 0us; 16471us; 2us; 32768us; 55us; 219us; 59us; 215us; 0us; 16472us; 0us; 16473us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 0us; 16477us; 0us; 16478us; 0us; 16479us; 0us; 16480us; 0us; 16481us; 0us; 16482us; 0us; 16483us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 7us; 8us; 10us; 11us; 18us; 19us; 21us; 22us; 23us; 27us; 31us; 33us; 34us; 36us; 40us; 42us; 46us; 49us; 50us; 53us; 54us; 56us; 57us; 59us; 61us; 67us; 69us; 71us; 72us; 78us; 80us; 82us; 83us; 84us; 86us; 92us; 93us; 125us; 127us; 128us; 160us; 161us; 163us; 195us; 196us; 197us; 199us; 200us; 216us; 217us; 236us; 237us; 253us; 254us; 255us; 257us; 259us; 277us; 295us; 311us; 327us; 354us; 381us; 383us; 410us; 437us; 438us; 440us; 442us; 460us; 478us; 494us; 510us; 537us; 564us; 565us; 569us; 587us; 603us; 621us; 637us; 655us; 671us; 698us; 699us; 726us; 729us; 731us; 749us; 765us; 767us; 768us; 770us; 788us; 804us; 806us; 807us; 809us; 810us; 812us; 813us; 816us; 818us; 836us; 852us; 870us; 886us; 913us; 914us; 916us; 934us; 950us; 952us; 955us; 957us; 958us; 959us; 960us; 961us; 971us; 973us; 1000us; 1003us; 1005us; 1032us; 1033us; 1034us; 1040us; 1045us; 1046us; 1048us; 1049us; 1051us; 1053us; 1055us; 1057us; 1059us; 1060us; 1078us; 1093us; 1095us; 1113us; 1115us; 1116us; 1134us; 1135us; 1138us; 1156us; 1171us; 1172us; 1190us; 1205us; 1209us; 1211us; 1215us; 1217us; 1218us; 1219us; 1223us; 1227us; 1228us; 1229us; 1230us; 1240us; 1250us; 1260us; 1270us; 1280us; 1290us; 1306us; 1321us; 1333us; 1348us; 1361us; 1377us; 1393us; 1411us; 1429us; 1447us; 1465us; 1483us; 1501us; 1519us; 1537us; 1555us; 1573us; 1591us; 1609us; 1627us; 1645us; 1663us; 1664us; 1665us; 1683us; 1701us; 1702us; 1703us; 1704us; 1705us; 1709us; 1711us; 1712us; 1716us; 1719us; 1720us; 1732us; 1734us; 1735us; 1753us; 1754us; 1755us; 1773us; 1774us; 1775us; 1778us; 1779us; 1780us; 1781us; 1782us; 1783us; 1784us; 1785us; 1786us; 1787us; 1788us; 1789us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 9us; 7us; 7us; 2us; 2us; 9us; 7us; 7us; 5us; 5us; 4us; 3us; 5us; 1us; 1us; 1us; 6us; 3us; 4us; 2us; 3us; 1us; 3us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 3us; 3us; 1us; 1us; 3us; 1us; 1us; 1us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 2us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 20us; 20us; 21us; 21us; 21us; 22us; 23us; 23us; 24us; 25us; 26us; 26us; 26us; 26us; 26us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 16411us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 16417us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16420us; 16421us; 16422us; 16423us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16425us; 16426us; 65535us; 65535us; 16428us; 65535us; 16429us; 65535us; 65535us; 65535us; 65535us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 65535us; 16432us; 65535us; 65535us; 65535us; 65535us; 65535us; 16435us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16439us; 16440us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16455us; 16456us; 65535us; 65535us; 16457us; 16458us; 16459us; 16460us; 65535us; 65535us; 16462us; 65535us; 65535us; 16463us; 65535us; 65535us; 16465us; 65535us; 16466us; 16468us; 65535us; 16470us; 16471us; 65535us; 16472us; 16473us; 16474us; 16475us; 16476us; 16477us; 16478us; 16479us; 16480us; 16481us; 16482us; 16483us; |]
let _fsyacc_reductions ()  =    [| 
# 559 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 568 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "CPar.fsy"
                                                               Prog _1 
                   )
# 52 "CPar.fsy"
                 : Absyn.program));
# 579 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "CPar.fsy"
                                                               [] 
                   )
# 57 "CPar.fsy"
                 : 'gentype_Topdecs));
# 589 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 58 "CPar.fsy"
                 : 'gentype_Topdecs));
# 601 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 62 "CPar.fsy"
                 : 'gentype_Topdec));
# 612 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CPar.fsy"
                                                               _1 
                   )
# 63 "CPar.fsy"
                 : 'gentype_Topdec));
# 623 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 81 "CPar.fsy"
                 : 'gentype_Vardec));
# 635 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 92 "CPar.fsy"
                 : 'gentype_Vardesc));
# 646 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 100 "CPar.fsy"
                 : 'gentype_Vardesc));
# 657 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "CPar.fsy"
                                                               _2                                      
                   )
# 102 "CPar.fsy"
                 : 'gentype_Vardesc));
# 668 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 104 "CPar.fsy"
                 : 'gentype_Vardesc));
# 679 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 106 "CPar.fsy"
                 : 'gentype_Vardesc));
# 691 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 111 "CPar.fsy"
                 : 'gentype_Fundec));
# 704 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 113 "CPar.fsy"
                 : 'gentype_Fundec));
# 718 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "CPar.fsy"
                                                               [] 
                   )
# 118 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 728 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "CPar.fsy"
                                                               _1 
                   )
# 119 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 739 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "CPar.fsy"
                                                               [_1]     
                   )
# 123 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 750 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 124 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 762 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               Block _2 
                   )
# 129 "CPar.fsy"
                 : 'gentype_Block));
# 773 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               [] 
                   )
# 133 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 783 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 134 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 795 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 135 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 807 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               _1 
                   )
# 139 "CPar.fsy"
                 : 'gentype_Stmt));
# 818 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               _1 
                   )
# 140 "CPar.fsy"
                 : 'gentype_Stmt));
# 829 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtM));
# 840 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               Return None          
                   )
# 145 "CPar.fsy"
                 : 'gentype_StmtM));
# 850 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtM));
# 861 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               _1                   
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtM));
# 872 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtM));
# 885 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 149 "CPar.fsy"
                 : 'gentype_StmtM));
# 897 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                                            For(_3,_5,_7,_9)  
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtM));
# 911 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               DoWhile(_2, _5)   
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtM));
# 923 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               DoUntil(_2, _5)   
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtM));
# 935 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               Break             
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtM));
# 945 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               Continue          
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtM));
# 955 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                                            Forin(_2,_5,_7,_9)   
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtM));
# 969 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                                               Switch(_3,_6)  
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtM));
# 981 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 160 "CPar.fsy"
                 : 'gentype_StmtU));
# 994 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 161 "CPar.fsy"
                 : 'gentype_StmtU));
# 1006 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 162 "CPar.fsy"
                 : 'gentype_StmtU));
# 1018 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                                          [Case(_2,_4)]    
                   )
# 165 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1030 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                                          [Default(_3)]    
                   )
# 166 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1041 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                                          Case(_2,_4) :: _5
                   )
# 167 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1054 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               Access _1           
                   )
# 170 "CPar.fsy"
                 : 'gentype_Expr));
# 1065 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               _1                  
                   )
# 171 "CPar.fsy"
                 : 'gentype_Expr));
# 1076 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               _1                  
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1087 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _5 = parseState.GetInput(5) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Hex(_3,_5)          
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1099 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1111 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1123 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1134 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Print(_2, _3)       
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1146 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1156 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               PrintHex(_2, _3)    
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1168 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               PreInc _2       
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1179 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               PreDec _2       
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1190 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               PostInc _1      
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1201 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               PostDec _1      
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1212 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1224 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1236 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1248 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1260 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1272 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1284 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1296 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1308 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1320 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1332 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1344 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               Prim3(_1, _3, _5)   
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1357 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1369 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 200 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1381 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               CstI _1             
                   )
# 208 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1392 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               ConstString(_1)     
                   )
# 209 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1403 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               _2                  
                   )
# 210 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1414 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstBool in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               ConstBool(_1)       
                   )
# 211 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1425 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstFloat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               ConstFloat(_1)      
                   )
# 212 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1436 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstChar in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               ConstChar(_1)       
                   )
# 213 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1447 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               Addr _2             
                   )
# 214 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1458 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               AccVar _1           
                   )
# 218 "CPar.fsy"
                 : 'gentype_Access));
# 1469 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               _2                  
                   )
# 219 "CPar.fsy"
                 : 'gentype_Access));
# 1480 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 220 "CPar.fsy"
                 : 'gentype_Access));
# 1491 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 221 "CPar.fsy"
                 : 'gentype_Access));
# 1502 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 222 "CPar.fsy"
                 : 'gentype_Access));
# 1514 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "CPar.fsy"
                                                               []       
                   )
# 226 "CPar.fsy"
                 : 'gentype_Exprs));
# 1524 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                               _1       
                   )
# 227 "CPar.fsy"
                 : 'gentype_Exprs));
# 1535 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "CPar.fsy"
                                                               [_1]     
                   )
# 231 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1546 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 232 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1558 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "CPar.fsy"
                                                               _1       
                   )
# 236 "CPar.fsy"
                 : 'gentype_Const));
# 1569 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "CPar.fsy"
                                                               - _2     
                   )
# 237 "CPar.fsy"
                 : 'gentype_Const));
# 1580 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "CPar.fsy"
                                                               -1       
                   )
# 238 "CPar.fsy"
                 : 'gentype_Const));
# 1590 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> bool in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "CPar.fsy"
                                                               _1       
                   )
# 241 "CPar.fsy"
                 : 'gentype_ConstBool));
# 1601 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 "CPar.fsy"
                                                               _1       
                   )
# 244 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1612 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "CPar.fsy"
                                                               - _2     
                   )
# 245 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1623 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 "CPar.fsy"
                                                               _1       
                   )
# 248 "CPar.fsy"
                 : 'gentype_ConstString));
# 1634 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 "CPar.fsy"
                                                               _1       
                   )
# 251 "CPar.fsy"
                 : 'gentype_ConstChar));
# 1645 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "CPar.fsy"
                                                               TypI     
                   )
# 254 "CPar.fsy"
                 : 'gentype_Type));
# 1655 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 "CPar.fsy"
                                                               TypB     
                   )
# 255 "CPar.fsy"
                 : 'gentype_Type));
# 1665 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 "CPar.fsy"
                                                               TypC     
                   )
# 256 "CPar.fsy"
                 : 'gentype_Type));
# 1675 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "CPar.fsy"
                                                               TypF     
                   )
# 257 "CPar.fsy"
                 : 'gentype_Type));
# 1685 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 "CPar.fsy"
                                                               TypS     
                   )
# 258 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1696 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 63;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
